{"posts":[{"title":"wstg note - information gathering","text":"信息收集网页元数据泄露 robots.txt MATA标签 sitemaps Sitemap 中文意思为「网站地图」，制作和提交Sitemap主要帮助Google完整分析网站并加快收录速度 security.txt security.txt为网站提供了一种声明安全策略的方式。这个开放源代码项目旨在帮助安全研究人员在发现漏洞时，能够明确且直接地与相关组织联系，确保安全问题得到及时报告和解决 humans.txt humans.txt 是一项了解网站幕后人员的举措。它采用文本文件的形式，其中包含为网站建设做出贡献的不同人员的信息。该文件通常（但不总是）包含与职业或工作网站/路径相关的信息 网络应用程序发现三种网页程序发现（部署方式）： 基于非标准的URL路径 基于不同的端口 虚拟主机 对于1，2可以使用扫描器，如gobuster进行目录扫描，nmap进行端口扫描 对于3，有以下方式： DNS Zone Transfers DNS Zone Transfers（DNS区域传输）是指一台备用服务器使用主服务器的数据来刷新自己的域数据库，其目的是为了防止主域名服务器因意外故障尔影响到整个域名的解析 当DNS服务器被错误设置成只要有client发出请求，就会向对方提供一个子域数据库的详细信息时，就产生了DNS域传送漏洞 攻击流程： 确定名称解析服务器，如用nslookup，host等工具 1host -t ns www.owasp.org NS 代表“域名服务器”，域名服务器记录指示哪个 DNS 服务器对该域具有权威性（即，哪个服务器包含实际 DNS 记录） 向NS申请区域转移 1host -l domain domainserver DNS Inverse Queries DNS DNS 指针记录（简称 PTR）提供与 IP 地址关联的域名。DNS PTR 记录与“A”记录完全相反，它提供与域名关联的 IP 地址。 反向 DNS 查找与此过程相反：它是以 IP 地址开始并查找域名的查询。 Reverse-IP Serviceshttps://mxtoolbox.com/SuperTool.aspx 检查WEB页面DTD文件 文档类型定义（DTD）可定义合法的XML文档构建模块。它使用一系列合法的元素来定义文档的结构。 DTD 可被成行地声明于 XML 文档中，也可作为一个外部引用。 1234567891011121314&lt;?xml version=&quot;1.0&quot;?&gt;&lt;!DOCTYPE note [&lt;!ELEMENT note (to,from,heading,body)&gt;&lt;!ELEMENT to (#PCDATA)&gt;&lt;!ELEMENT from (#PCDATA)&gt;&lt;!ELEMENT heading (#PCDATA)&gt;&lt;!ELEMENT body (#PCDATA)&gt;]&gt;&lt;note&gt;&lt;to&gt;Tove&lt;/to&gt;&lt;from&gt;Jani&lt;/from&gt;&lt;heading&gt;Reminder&lt;/heading&gt;&lt;body&gt;Don't forget me this weekend&lt;/body&gt;&lt;/note&gt; 源映射文件js压缩什么是js压缩？ JS文件压缩是通过移除不必要的字符、缩短变量名、合并代码文件、使用压缩工具来实现的，这些方法有效减少了文件的大小，从而加快网页的加载速度 压缩例子 源代码 12345678/* A TypeScript demo: example.ts */document.querySelector('button')?.addEventListener('click', () =&gt; { const num: number = Math.floor(Math.random() * 101); const greet: string = 'Hello'; (document.querySelector('p') as HTMLParagraphElement).innerText = `${greet}, you are no. ${num}!`; console.log(num);}); 压缩后的代码 123/* A compressed JavaScript version of the TypeScript demo: example.min.js */document.querySelector(&quot;button&quot;)?.addEventListener(&quot;click&quot;,(()=&gt;{const e=Math.floor(101*Math.random());document.querySelector(&quot;p&quot;).innerText=`Hello, you are no. ${e}!`,console.log(e)})); 不过，压缩代码可能会使调试变得更加困难。源映射可以解决此问题：通过将编译后的代码映射回原始代码，源映射可以帮助您快速找到错误的来源。 原映射文件例子123456789101112{ &quot;version&quot;: 3, &quot;file&quot;: &quot;static/js/main.chunk.js&quot;, &quot;sources&quot;: [ &quot;/home/sysadmin/cashsystem/src/actions/index.js&quot;, &quot;/home/sysadmin/cashsystem/src/actions/reportAction.js&quot;, &quot;/home/sysadmin/cashsystem/src/actions/cashoutAction.js&quot;, &quot;/home/sysadmin/cashsystem/src/actions/userAction.js&quot;, &quot;...&quot; ], &quot;...&quot;} 可以从源映射代码中获取敏感信息 重定向响应中可能包含的内容这个需要找到点例子理解","link":"/2024/12/13/wstg-note-information-gathering/"}],"tags":[{"name":"cyberSecurity","slug":"cyberSecurity","link":"/tags/cyberSecurity/"}],"categories":[],"pages":[]}